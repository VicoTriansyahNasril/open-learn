generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(STUDENT)

  progress  LessonProgress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String?
  level       String
  category    String
  publishedAt DateTime?
  imageUrl    String?

  modules     Module[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Module {
  id       String   @id @default(cuid())
  title    String
  order    Int
  courseId String
  course   Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  lessons  Lesson[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([courseId, order])
}

model Lesson {
  id       String   @id @default(cuid())
  title    String
  order    Int
  content  String?  @db.Text
  moduleId String
  module   Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  progress LessonProgress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([moduleId, order])
}

model LessonProgress {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  lessonId    String
  lesson      Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  completedAt DateTime @default(now())
  @@unique([userId, lessonId])
}
